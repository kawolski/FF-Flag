{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { isObject } from \"@azure/core-util\";\nconst RedactedString = \"REDACTED\"; // Make sure this list is up-to-date with the one under core/logger/Readme#Keyconcepts\n\nconst defaultAllowedHeaderNames = [\"x-ms-client-request-id\", \"x-ms-return-client-request-id\", \"x-ms-useragent\", \"x-ms-correlation-request-id\", \"x-ms-request-id\", \"client-request-id\", \"ms-cv\", \"return-client-request-id\", \"traceparent\", \"Access-Control-Allow-Credentials\", \"Access-Control-Allow-Headers\", \"Access-Control-Allow-Methods\", \"Access-Control-Allow-Origin\", \"Access-Control-Expose-Headers\", \"Access-Control-Max-Age\", \"Access-Control-Request-Headers\", \"Access-Control-Request-Method\", \"Origin\", \"Accept\", \"Accept-Encoding\", \"Cache-Control\", \"Connection\", \"Content-Length\", \"Content-Type\", \"Date\", \"ETag\", \"Expires\", \"If-Match\", \"If-Modified-Since\", \"If-None-Match\", \"If-Unmodified-Since\", \"Last-Modified\", \"Pragma\", \"Request-Id\", \"Retry-After\", \"Server\", \"Transfer-Encoding\", \"User-Agent\", \"WWW-Authenticate\"];\nconst defaultAllowedQueryParameters = [\"api-version\"];\n/**\n * @internal\n */\n\nexport class Sanitizer {\n  constructor({\n    additionalAllowedHeaderNames: allowedHeaderNames = [],\n    additionalAllowedQueryParameters: allowedQueryParameters = []\n  } = {}) {\n    allowedHeaderNames = defaultAllowedHeaderNames.concat(allowedHeaderNames);\n    allowedQueryParameters = defaultAllowedQueryParameters.concat(allowedQueryParameters);\n    this.allowedHeaderNames = new Set(allowedHeaderNames.map(n => n.toLowerCase()));\n    this.allowedQueryParameters = new Set(allowedQueryParameters.map(p => p.toLowerCase()));\n  }\n\n  sanitize(obj) {\n    const seen = new Set();\n    return JSON.stringify(obj, (key, value) => {\n      // Ensure Errors include their interesting non-enumerable members\n      if (value instanceof Error) {\n        return Object.assign(Object.assign({}, value), {\n          name: value.name,\n          message: value.message\n        });\n      }\n\n      if (key === \"headers\") {\n        return this.sanitizeHeaders(value);\n      } else if (key === \"url\") {\n        return this.sanitizeUrl(value);\n      } else if (key === \"query\") {\n        return this.sanitizeQuery(value);\n      } else if (key === \"body\") {\n        // Don't log the request body\n        return undefined;\n      } else if (key === \"response\") {\n        // Don't log response again\n        return undefined;\n      } else if (key === \"operationSpec\") {\n        // When using sendOperationRequest, the request carries a massive\n        // field with the autorest spec. No need to log it.\n        return undefined;\n      } else if (Array.isArray(value) || isObject(value)) {\n        if (seen.has(value)) {\n          return \"[Circular]\";\n        }\n\n        seen.add(value);\n      }\n\n      return value;\n    }, 2);\n  }\n\n  sanitizeHeaders(obj) {\n    const sanitized = {};\n\n    for (const key of Object.keys(obj)) {\n      if (this.allowedHeaderNames.has(key.toLowerCase())) {\n        sanitized[key] = obj[key];\n      } else {\n        sanitized[key] = RedactedString;\n      }\n    }\n\n    return sanitized;\n  }\n\n  sanitizeQuery(value) {\n    if (typeof value !== \"object\" || value === null) {\n      return value;\n    }\n\n    const sanitized = {};\n\n    for (const k of Object.keys(value)) {\n      if (this.allowedQueryParameters.has(k.toLowerCase())) {\n        sanitized[k] = value[k];\n      } else {\n        sanitized[k] = RedactedString;\n      }\n    }\n\n    return sanitized;\n  }\n\n  sanitizeUrl(value) {\n    if (typeof value !== \"string\" || value === null) {\n      return value;\n    }\n\n    const url = new URL(value);\n\n    if (!url.search) {\n      return value;\n    }\n\n    for (const [key] of url.searchParams) {\n      if (!this.allowedQueryParameters.has(key.toLowerCase())) {\n        url.searchParams.set(key, RedactedString);\n      }\n    }\n\n    return url.toString();\n  }\n\n}","map":{"version":3,"names":["isObject","RedactedString","defaultAllowedHeaderNames","defaultAllowedQueryParameters","Sanitizer","constructor","additionalAllowedHeaderNames","allowedHeaderNames","additionalAllowedQueryParameters","allowedQueryParameters","concat","Set","map","n","toLowerCase","p","sanitize","obj","seen","JSON","stringify","key","value","Error","Object","assign","name","message","sanitizeHeaders","sanitizeUrl","sanitizeQuery","undefined","Array","isArray","has","add","sanitized","keys","k","url","URL","search","searchParams","set","toString"],"sources":["C:/Users/prash/source/repos/FF-Flag/FF-Flag/ClientApp/node_modules/@azure/core-rest-pipeline/dist-esm/src/util/sanitizer.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { isObject } from \"@azure/core-util\";\nconst RedactedString = \"REDACTED\";\n// Make sure this list is up-to-date with the one under core/logger/Readme#Keyconcepts\nconst defaultAllowedHeaderNames = [\n    \"x-ms-client-request-id\",\n    \"x-ms-return-client-request-id\",\n    \"x-ms-useragent\",\n    \"x-ms-correlation-request-id\",\n    \"x-ms-request-id\",\n    \"client-request-id\",\n    \"ms-cv\",\n    \"return-client-request-id\",\n    \"traceparent\",\n    \"Access-Control-Allow-Credentials\",\n    \"Access-Control-Allow-Headers\",\n    \"Access-Control-Allow-Methods\",\n    \"Access-Control-Allow-Origin\",\n    \"Access-Control-Expose-Headers\",\n    \"Access-Control-Max-Age\",\n    \"Access-Control-Request-Headers\",\n    \"Access-Control-Request-Method\",\n    \"Origin\",\n    \"Accept\",\n    \"Accept-Encoding\",\n    \"Cache-Control\",\n    \"Connection\",\n    \"Content-Length\",\n    \"Content-Type\",\n    \"Date\",\n    \"ETag\",\n    \"Expires\",\n    \"If-Match\",\n    \"If-Modified-Since\",\n    \"If-None-Match\",\n    \"If-Unmodified-Since\",\n    \"Last-Modified\",\n    \"Pragma\",\n    \"Request-Id\",\n    \"Retry-After\",\n    \"Server\",\n    \"Transfer-Encoding\",\n    \"User-Agent\",\n    \"WWW-Authenticate\",\n];\nconst defaultAllowedQueryParameters = [\"api-version\"];\n/**\n * @internal\n */\nexport class Sanitizer {\n    constructor({ additionalAllowedHeaderNames: allowedHeaderNames = [], additionalAllowedQueryParameters: allowedQueryParameters = [], } = {}) {\n        allowedHeaderNames = defaultAllowedHeaderNames.concat(allowedHeaderNames);\n        allowedQueryParameters = defaultAllowedQueryParameters.concat(allowedQueryParameters);\n        this.allowedHeaderNames = new Set(allowedHeaderNames.map((n) => n.toLowerCase()));\n        this.allowedQueryParameters = new Set(allowedQueryParameters.map((p) => p.toLowerCase()));\n    }\n    sanitize(obj) {\n        const seen = new Set();\n        return JSON.stringify(obj, (key, value) => {\n            // Ensure Errors include their interesting non-enumerable members\n            if (value instanceof Error) {\n                return Object.assign(Object.assign({}, value), { name: value.name, message: value.message });\n            }\n            if (key === \"headers\") {\n                return this.sanitizeHeaders(value);\n            }\n            else if (key === \"url\") {\n                return this.sanitizeUrl(value);\n            }\n            else if (key === \"query\") {\n                return this.sanitizeQuery(value);\n            }\n            else if (key === \"body\") {\n                // Don't log the request body\n                return undefined;\n            }\n            else if (key === \"response\") {\n                // Don't log response again\n                return undefined;\n            }\n            else if (key === \"operationSpec\") {\n                // When using sendOperationRequest, the request carries a massive\n                // field with the autorest spec. No need to log it.\n                return undefined;\n            }\n            else if (Array.isArray(value) || isObject(value)) {\n                if (seen.has(value)) {\n                    return \"[Circular]\";\n                }\n                seen.add(value);\n            }\n            return value;\n        }, 2);\n    }\n    sanitizeHeaders(obj) {\n        const sanitized = {};\n        for (const key of Object.keys(obj)) {\n            if (this.allowedHeaderNames.has(key.toLowerCase())) {\n                sanitized[key] = obj[key];\n            }\n            else {\n                sanitized[key] = RedactedString;\n            }\n        }\n        return sanitized;\n    }\n    sanitizeQuery(value) {\n        if (typeof value !== \"object\" || value === null) {\n            return value;\n        }\n        const sanitized = {};\n        for (const k of Object.keys(value)) {\n            if (this.allowedQueryParameters.has(k.toLowerCase())) {\n                sanitized[k] = value[k];\n            }\n            else {\n                sanitized[k] = RedactedString;\n            }\n        }\n        return sanitized;\n    }\n    sanitizeUrl(value) {\n        if (typeof value !== \"string\" || value === null) {\n            return value;\n        }\n        const url = new URL(value);\n        if (!url.search) {\n            return value;\n        }\n        for (const [key] of url.searchParams) {\n            if (!this.allowedQueryParameters.has(key.toLowerCase())) {\n                url.searchParams.set(key, RedactedString);\n            }\n        }\n        return url.toString();\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}