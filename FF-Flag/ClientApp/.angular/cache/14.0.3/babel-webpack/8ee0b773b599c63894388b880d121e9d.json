{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/prash/source/repos/FF-Flag/FF-Flag/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * The programmatic identifier of the setClientRequestIdPolicy.\n */\nexport const setClientRequestIdPolicyName = \"setClientRequestIdPolicy\";\n/**\n * Each PipelineRequest gets a unique id upon creation.\n * This policy passes that unique id along via an HTTP header to enable better\n * telemetry and tracing.\n * @param requestIdHeaderName - The name of the header to pass the request ID to.\n */\n\nexport function setClientRequestIdPolicy(requestIdHeaderName = \"x-ms-client-request-id\") {\n  return {\n    name: setClientRequestIdPolicyName,\n\n    sendRequest(request, next) {\n      return _asyncToGenerator(function* () {\n        if (!request.headers.has(requestIdHeaderName)) {\n          request.headers.set(requestIdHeaderName, request.requestId);\n        }\n\n        return next(request);\n      })();\n    }\n\n  };\n}","map":{"version":3,"names":["setClientRequestIdPolicyName","setClientRequestIdPolicy","requestIdHeaderName","name","sendRequest","request","next","headers","has","set","requestId"],"sources":["C:/Users/prash/source/repos/FF-Flag/FF-Flag/ClientApp/node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/setClientRequestIdPolicy.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * The programmatic identifier of the setClientRequestIdPolicy.\n */\nexport const setClientRequestIdPolicyName = \"setClientRequestIdPolicy\";\n/**\n * Each PipelineRequest gets a unique id upon creation.\n * This policy passes that unique id along via an HTTP header to enable better\n * telemetry and tracing.\n * @param requestIdHeaderName - The name of the header to pass the request ID to.\n */\nexport function setClientRequestIdPolicy(requestIdHeaderName = \"x-ms-client-request-id\") {\n    return {\n        name: setClientRequestIdPolicyName,\n        async sendRequest(request, next) {\n            if (!request.headers.has(requestIdHeaderName)) {\n                request.headers.set(requestIdHeaderName, request.requestId);\n            }\n            return next(request);\n        },\n    };\n}\n"],"mappings":";AAAA;AACA;;AACA;AACA;AACA;AACA,OAAO,MAAMA,4BAA4B,GAAG,0BAArC;AACP;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,wBAAT,CAAkCC,mBAAmB,GAAG,wBAAxD,EAAkF;EACrF,OAAO;IACHC,IAAI,EAAEH,4BADH;;IAEGI,WAAN,CAAkBC,OAAlB,EAA2BC,IAA3B,EAAiC;MAAA;QAC7B,IAAI,CAACD,OAAO,CAACE,OAAR,CAAgBC,GAAhB,CAAoBN,mBAApB,CAAL,EAA+C;UAC3CG,OAAO,CAACE,OAAR,CAAgBE,GAAhB,CAAoBP,mBAApB,EAAyCG,OAAO,CAACK,SAAjD;QACH;;QACD,OAAOJ,IAAI,CAACD,OAAD,CAAX;MAJ6B;IAKhC;;EAPE,CAAP;AASH"},"metadata":{},"sourceType":"module"}