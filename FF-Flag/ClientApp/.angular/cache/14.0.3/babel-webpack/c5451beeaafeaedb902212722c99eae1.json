{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Converts an ArrayBuffer to a hexadecimal string.\n * @param buffer - Raw binary data.\n * @internal\n */\nexport function bufferToHex(buffer) {\n  const bytes = new Uint8Array(buffer);\n  return Array.prototype.map.call(bytes, byteToHex).join(\"\");\n}\n/**\n * Converts a byte to a hexadecimal string.\n * @param byte - An integer representation of a byte.\n * @internal\n */\n\nfunction byteToHex(byte) {\n  const hex = byte.toString(16);\n  return hex.length === 2 ? hex : `0${hex}`;\n}","map":{"version":3,"names":["bufferToHex","buffer","bytes","Uint8Array","Array","prototype","map","call","byteToHex","join","byte","hex","toString","length"],"sources":["C:/Users/prash/source/repos/FF-Flag/FF-Flag/ClientApp/node_modules/@azure/core-util/dist-esm/src/hex.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Converts an ArrayBuffer to a hexadecimal string.\n * @param buffer - Raw binary data.\n * @internal\n */\nexport function bufferToHex(buffer) {\n    const bytes = new Uint8Array(buffer);\n    return Array.prototype.map.call(bytes, byteToHex).join(\"\");\n}\n/**\n * Converts a byte to a hexadecimal string.\n * @param byte - An integer representation of a byte.\n * @internal\n */\nfunction byteToHex(byte) {\n    const hex = byte.toString(16);\n    return hex.length === 2 ? hex : `0${hex}`;\n}\n"],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,WAAT,CAAqBC,MAArB,EAA6B;EAChC,MAAMC,KAAK,GAAG,IAAIC,UAAJ,CAAeF,MAAf,CAAd;EACA,OAAOG,KAAK,CAACC,SAAN,CAAgBC,GAAhB,CAAoBC,IAApB,CAAyBL,KAAzB,EAAgCM,SAAhC,EAA2CC,IAA3C,CAAgD,EAAhD,CAAP;AACH;AACD;AACA;AACA;AACA;AACA;;AACA,SAASD,SAAT,CAAmBE,IAAnB,EAAyB;EACrB,MAAMC,GAAG,GAAGD,IAAI,CAACE,QAAL,CAAc,EAAd,CAAZ;EACA,OAAOD,GAAG,CAACE,MAAJ,KAAe,CAAf,GAAmBF,GAAnB,GAA0B,IAAGA,GAAI,EAAxC;AACH"},"metadata":{},"sourceType":"module"}