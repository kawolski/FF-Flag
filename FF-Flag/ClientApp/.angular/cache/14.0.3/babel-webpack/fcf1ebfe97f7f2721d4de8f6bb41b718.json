{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/prash/source/repos/FF-Flag/FF-Flag/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * The programmatic identifier of the formDataPolicy.\n */\nexport const formDataPolicyName = \"formDataPolicy\";\n/**\n * A policy that encodes FormData on the request into the body.\n */\n\nexport function formDataPolicy() {\n  return {\n    name: formDataPolicyName,\n\n    sendRequest(request, next) {\n      return _asyncToGenerator(function* () {\n        if (request.formData) {\n          const formData = request.formData;\n          const requestForm = new FormData();\n\n          for (const formKey of Object.keys(formData)) {\n            const formValue = formData[formKey];\n\n            if (Array.isArray(formValue)) {\n              for (const subValue of formValue) {\n                requestForm.append(formKey, subValue);\n              }\n            } else {\n              requestForm.append(formKey, formValue);\n            }\n          }\n\n          request.body = requestForm;\n          request.formData = undefined;\n          const contentType = request.headers.get(\"Content-Type\");\n\n          if (contentType && contentType.indexOf(\"application/x-www-form-urlencoded\") !== -1) {\n            request.body = new URLSearchParams(requestForm).toString();\n          } else if (contentType && contentType.indexOf(\"multipart/form-data\") !== -1) {\n            // browser will automatically apply a suitable content-type header\n            request.headers.delete(\"Content-Type\");\n          }\n        }\n\n        return next(request);\n      })();\n    }\n\n  };\n}","map":{"version":3,"names":["formDataPolicyName","formDataPolicy","name","sendRequest","request","next","formData","requestForm","FormData","formKey","Object","keys","formValue","Array","isArray","subValue","append","body","undefined","contentType","headers","get","indexOf","URLSearchParams","toString","delete"],"sources":["C:/Users/prash/source/repos/FF-Flag/FF-Flag/ClientApp/node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/formDataPolicy.browser.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * The programmatic identifier of the formDataPolicy.\n */\nexport const formDataPolicyName = \"formDataPolicy\";\n/**\n * A policy that encodes FormData on the request into the body.\n */\nexport function formDataPolicy() {\n    return {\n        name: formDataPolicyName,\n        async sendRequest(request, next) {\n            if (request.formData) {\n                const formData = request.formData;\n                const requestForm = new FormData();\n                for (const formKey of Object.keys(formData)) {\n                    const formValue = formData[formKey];\n                    if (Array.isArray(formValue)) {\n                        for (const subValue of formValue) {\n                            requestForm.append(formKey, subValue);\n                        }\n                    }\n                    else {\n                        requestForm.append(formKey, formValue);\n                    }\n                }\n                request.body = requestForm;\n                request.formData = undefined;\n                const contentType = request.headers.get(\"Content-Type\");\n                if (contentType && contentType.indexOf(\"application/x-www-form-urlencoded\") !== -1) {\n                    request.body = new URLSearchParams(requestForm).toString();\n                }\n                else if (contentType && contentType.indexOf(\"multipart/form-data\") !== -1) {\n                    // browser will automatically apply a suitable content-type header\n                    request.headers.delete(\"Content-Type\");\n                }\n            }\n            return next(request);\n        },\n    };\n}\n"],"mappings":";AAAA;AACA;;AACA;AACA;AACA;AACA,OAAO,MAAMA,kBAAkB,GAAG,gBAA3B;AACP;AACA;AACA;;AACA,OAAO,SAASC,cAAT,GAA0B;EAC7B,OAAO;IACHC,IAAI,EAAEF,kBADH;;IAEGG,WAAN,CAAkBC,OAAlB,EAA2BC,IAA3B,EAAiC;MAAA;QAC7B,IAAID,OAAO,CAACE,QAAZ,EAAsB;UAClB,MAAMA,QAAQ,GAAGF,OAAO,CAACE,QAAzB;UACA,MAAMC,WAAW,GAAG,IAAIC,QAAJ,EAApB;;UACA,KAAK,MAAMC,OAAX,IAAsBC,MAAM,CAACC,IAAP,CAAYL,QAAZ,CAAtB,EAA6C;YACzC,MAAMM,SAAS,GAAGN,QAAQ,CAACG,OAAD,CAA1B;;YACA,IAAII,KAAK,CAACC,OAAN,CAAcF,SAAd,CAAJ,EAA8B;cAC1B,KAAK,MAAMG,QAAX,IAAuBH,SAAvB,EAAkC;gBAC9BL,WAAW,CAACS,MAAZ,CAAmBP,OAAnB,EAA4BM,QAA5B;cACH;YACJ,CAJD,MAKK;cACDR,WAAW,CAACS,MAAZ,CAAmBP,OAAnB,EAA4BG,SAA5B;YACH;UACJ;;UACDR,OAAO,CAACa,IAAR,GAAeV,WAAf;UACAH,OAAO,CAACE,QAAR,GAAmBY,SAAnB;UACA,MAAMC,WAAW,GAAGf,OAAO,CAACgB,OAAR,CAAgBC,GAAhB,CAAoB,cAApB,CAApB;;UACA,IAAIF,WAAW,IAAIA,WAAW,CAACG,OAAZ,CAAoB,mCAApB,MAA6D,CAAC,CAAjF,EAAoF;YAChFlB,OAAO,CAACa,IAAR,GAAe,IAAIM,eAAJ,CAAoBhB,WAApB,EAAiCiB,QAAjC,EAAf;UACH,CAFD,MAGK,IAAIL,WAAW,IAAIA,WAAW,CAACG,OAAZ,CAAoB,qBAApB,MAA+C,CAAC,CAAnE,EAAsE;YACvE;YACAlB,OAAO,CAACgB,OAAR,CAAgBK,MAAhB,CAAuB,cAAvB;UACH;QACJ;;QACD,OAAOpB,IAAI,CAACD,OAAD,CAAX;MA1B6B;IA2BhC;;EA7BE,CAAP;AA+BH"},"metadata":{},"sourceType":"module"}