{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/*\n * NOTE: When moving this file, please update \"react-native\" section in package.json.\n */\n\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n */\nexport function generateUUID() {\n  let uuid = \"\";\n\n  for (let i = 0; i < 32; i++) {\n    // Generate a random number between 0 and 15\n    const randomNumber = Math.floor(Math.random() * 16); // Set the UUID version to 4 in the 13th position\n\n    if (i === 12) {\n      uuid += \"4\";\n    } else if (i === 16) {\n      // Set the UUID variant to \"10\" in the 17th position\n      uuid += randomNumber & 0x3 | 0x8;\n    } else {\n      // Add a random hexadecimal digit to the UUID string\n      uuid += randomNumber.toString(16);\n    } // Add hyphens to the UUID string at the appropriate positions\n\n\n    if (i === 7 || i === 11 || i === 15 || i === 19) {\n      uuid += \"-\";\n    }\n  }\n\n  return uuid;\n}\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n */\n\nexport function randomUUID() {\n  return generateUUID();\n}","map":{"version":3,"names":["generateUUID","uuid","i","randomNumber","Math","floor","random","toString","randomUUID"],"sources":["C:/Users/prash/source/repos/FF-Flag/FF-Flag/ClientApp/node_modules/@azure/core-util/dist-esm/src/uuidUtils.native.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/*\n * NOTE: When moving this file, please update \"react-native\" section in package.json.\n */\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n */\nexport function generateUUID() {\n    let uuid = \"\";\n    for (let i = 0; i < 32; i++) {\n        // Generate a random number between 0 and 15\n        const randomNumber = Math.floor(Math.random() * 16);\n        // Set the UUID version to 4 in the 13th position\n        if (i === 12) {\n            uuid += \"4\";\n        }\n        else if (i === 16) {\n            // Set the UUID variant to \"10\" in the 17th position\n            uuid += (randomNumber & 0x3) | 0x8;\n        }\n        else {\n            // Add a random hexadecimal digit to the UUID string\n            uuid += randomNumber.toString(16);\n        }\n        // Add hyphens to the UUID string at the appropriate positions\n        if (i === 7 || i === 11 || i === 15 || i === 19) {\n            uuid += \"-\";\n        }\n    }\n    return uuid;\n}\n/**\n * Generated Universally Unique Identifier\n *\n * @returns RFC4122 v4 UUID.\n */\nexport function randomUUID() {\n    return generateUUID();\n}\n"],"mappings":"AAAA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,YAAT,GAAwB;EAC3B,IAAIC,IAAI,GAAG,EAAX;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;IACzB;IACA,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAArB,CAFyB,CAGzB;;IACA,IAAIJ,CAAC,KAAK,EAAV,EAAc;MACVD,IAAI,IAAI,GAAR;IACH,CAFD,MAGK,IAAIC,CAAC,KAAK,EAAV,EAAc;MACf;MACAD,IAAI,IAAKE,YAAY,GAAG,GAAhB,GAAuB,GAA/B;IACH,CAHI,MAIA;MACD;MACAF,IAAI,IAAIE,YAAY,CAACI,QAAb,CAAsB,EAAtB,CAAR;IACH,CAdwB,CAezB;;;IACA,IAAIL,CAAC,KAAK,CAAN,IAAWA,CAAC,KAAK,EAAjB,IAAuBA,CAAC,KAAK,EAA7B,IAAmCA,CAAC,KAAK,EAA7C,EAAiD;MAC7CD,IAAI,IAAI,GAAR;IACH;EACJ;;EACD,OAAOA,IAAP;AACH;AACD;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASO,UAAT,GAAsB;EACzB,OAAOR,YAAY,EAAnB;AACH"},"metadata":{},"sourceType":"module"}