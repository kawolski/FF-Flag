{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/prash/source/repos/FF-Flag/FF-Flag/ClientApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { getUserAgentHeaderName, getUserAgentValue } from \"../util/userAgent\";\nconst UserAgentHeaderName = getUserAgentHeaderName();\n/**\n * The programmatic identifier of the userAgentPolicy.\n */\n\nexport const userAgentPolicyName = \"userAgentPolicy\";\n/**\n * A policy that sets the User-Agent header (or equivalent) to reflect\n * the library version.\n * @param options - Options to customize the user agent value.\n */\n\nexport function userAgentPolicy(options = {}) {\n  const userAgentValue = getUserAgentValue(options.userAgentPrefix);\n  return {\n    name: userAgentPolicyName,\n\n    sendRequest(request, next) {\n      return _asyncToGenerator(function* () {\n        if (!request.headers.has(UserAgentHeaderName)) {\n          request.headers.set(UserAgentHeaderName, userAgentValue);\n        }\n\n        return next(request);\n      })();\n    }\n\n  };\n}","map":{"version":3,"names":["getUserAgentHeaderName","getUserAgentValue","UserAgentHeaderName","userAgentPolicyName","userAgentPolicy","options","userAgentValue","userAgentPrefix","name","sendRequest","request","next","headers","has","set"],"sources":["C:/Users/prash/source/repos/FF-Flag/FF-Flag/ClientApp/node_modules/@azure/core-rest-pipeline/dist-esm/src/policies/userAgentPolicy.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { getUserAgentHeaderName, getUserAgentValue } from \"../util/userAgent\";\nconst UserAgentHeaderName = getUserAgentHeaderName();\n/**\n * The programmatic identifier of the userAgentPolicy.\n */\nexport const userAgentPolicyName = \"userAgentPolicy\";\n/**\n * A policy that sets the User-Agent header (or equivalent) to reflect\n * the library version.\n * @param options - Options to customize the user agent value.\n */\nexport function userAgentPolicy(options = {}) {\n    const userAgentValue = getUserAgentValue(options.userAgentPrefix);\n    return {\n        name: userAgentPolicyName,\n        async sendRequest(request, next) {\n            if (!request.headers.has(UserAgentHeaderName)) {\n                request.headers.set(UserAgentHeaderName, userAgentValue);\n            }\n            return next(request);\n        },\n    };\n}\n"],"mappings":";AAAA;AACA;AACA,SAASA,sBAAT,EAAiCC,iBAAjC,QAA0D,mBAA1D;AACA,MAAMC,mBAAmB,GAAGF,sBAAsB,EAAlD;AACA;AACA;AACA;;AACA,OAAO,MAAMG,mBAAmB,GAAG,iBAA5B;AACP;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,eAAT,CAAyBC,OAAO,GAAG,EAAnC,EAAuC;EAC1C,MAAMC,cAAc,GAAGL,iBAAiB,CAACI,OAAO,CAACE,eAAT,CAAxC;EACA,OAAO;IACHC,IAAI,EAAEL,mBADH;;IAEGM,WAAN,CAAkBC,OAAlB,EAA2BC,IAA3B,EAAiC;MAAA;QAC7B,IAAI,CAACD,OAAO,CAACE,OAAR,CAAgBC,GAAhB,CAAoBX,mBAApB,CAAL,EAA+C;UAC3CQ,OAAO,CAACE,OAAR,CAAgBE,GAAhB,CAAoBZ,mBAApB,EAAyCI,cAAzC;QACH;;QACD,OAAOK,IAAI,CAACD,OAAD,CAAX;MAJ6B;IAKhC;;EAPE,CAAP;AASH"},"metadata":{},"sourceType":"module"}