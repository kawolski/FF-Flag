{"ast":null,"code":"/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\nimport { KeyValue as KeyValueMapper } from \"../models/mappers\";\nexport const accept = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/vnd.microsoft.appconfig.keyset+json, application/json, application/problem+json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const endpoint = {\n  parameterPath: \"endpoint\",\n  mapper: {\n    serializedName: \"endpoint\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\nexport const name = {\n  parameterPath: [\"options\", \"name\"],\n  mapper: {\n    serializedName: \"name\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const syncToken = {\n  parameterPath: \"syncToken\",\n  mapper: {\n    serializedName: \"Sync-Token\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const apiVersion = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    serializedName: \"api-version\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const after = {\n  parameterPath: [\"options\", \"after\"],\n  mapper: {\n    serializedName: \"After\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const acceptDatetime = {\n  parameterPath: [\"options\", \"acceptDatetime\"],\n  mapper: {\n    serializedName: \"Accept-Datetime\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const accept1 = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/vnd.microsoft.appconfig.kvset+json, application/json, application/problem+json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const key = {\n  parameterPath: [\"options\", \"key\"],\n  mapper: {\n    serializedName: \"key\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const label = {\n  parameterPath: [\"options\", \"label\"],\n  mapper: {\n    serializedName: \"label\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const select = {\n  parameterPath: [\"options\", \"select\"],\n  mapper: {\n    serializedName: \"$Select\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  },\n  collectionFormat: \"CSV\"\n};\nexport const accept2 = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/vnd.microsoft.appconfig.kv+json, application/json, application/problem+json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const key1 = {\n  parameterPath: \"key\",\n  mapper: {\n    serializedName: \"key\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const ifMatch = {\n  parameterPath: [\"options\", \"ifMatch\"],\n  mapper: {\n    serializedName: \"If-Match\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const ifNoneMatch = {\n  parameterPath: [\"options\", \"ifNoneMatch\"],\n  mapper: {\n    serializedName: \"If-None-Match\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const contentType = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/vnd.microsoft.appconfig.kv+json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const entity = {\n  parameterPath: [\"options\", \"entity\"],\n  mapper: KeyValueMapper\n};\nexport const accept3 = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/vnd.microsoft.appconfig.labelset+json, application/json, application/problem+json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const select1 = {\n  parameterPath: [\"options\", \"select\"],\n  mapper: {\n    serializedName: \"$Select\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  },\n  collectionFormat: \"CSV\"\n};\nexport const nextLink = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};","map":{"version":3,"names":["KeyValue","KeyValueMapper","accept","parameterPath","mapper","defaultValue","isConstant","serializedName","type","name","endpoint","required","skipEncoding","syncToken","apiVersion","after","acceptDatetime","accept1","key","label","select","element","collectionFormat","accept2","key1","ifMatch","ifNoneMatch","contentType","entity","accept3","select1","nextLink"],"sources":["C:/Users/prash/source/repos/FF-Flag/FF-Flag/ClientApp/node_modules/@azure/app-configuration/dist-esm/src/generated/src/models/parameters.js"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\nimport { KeyValue as KeyValueMapper } from \"../models/mappers\";\nexport const accept = {\n    parameterPath: \"accept\",\n    mapper: {\n        defaultValue: \"application/vnd.microsoft.appconfig.keyset+json, application/json, application/problem+json\",\n        isConstant: true,\n        serializedName: \"Accept\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const endpoint = {\n    parameterPath: \"endpoint\",\n    mapper: {\n        serializedName: \"endpoint\",\n        required: true,\n        type: {\n            name: \"String\"\n        }\n    },\n    skipEncoding: true\n};\nexport const name = {\n    parameterPath: [\"options\", \"name\"],\n    mapper: {\n        serializedName: \"name\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const syncToken = {\n    parameterPath: \"syncToken\",\n    mapper: {\n        serializedName: \"Sync-Token\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const apiVersion = {\n    parameterPath: \"apiVersion\",\n    mapper: {\n        serializedName: \"api-version\",\n        required: true,\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const after = {\n    parameterPath: [\"options\", \"after\"],\n    mapper: {\n        serializedName: \"After\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const acceptDatetime = {\n    parameterPath: [\"options\", \"acceptDatetime\"],\n    mapper: {\n        serializedName: \"Accept-Datetime\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const accept1 = {\n    parameterPath: \"accept\",\n    mapper: {\n        defaultValue: \"application/vnd.microsoft.appconfig.kvset+json, application/json, application/problem+json\",\n        isConstant: true,\n        serializedName: \"Accept\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const key = {\n    parameterPath: [\"options\", \"key\"],\n    mapper: {\n        serializedName: \"key\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const label = {\n    parameterPath: [\"options\", \"label\"],\n    mapper: {\n        serializedName: \"label\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const select = {\n    parameterPath: [\"options\", \"select\"],\n    mapper: {\n        serializedName: \"$Select\",\n        type: {\n            name: \"Sequence\",\n            element: {\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    },\n    collectionFormat: \"CSV\"\n};\nexport const accept2 = {\n    parameterPath: \"accept\",\n    mapper: {\n        defaultValue: \"application/vnd.microsoft.appconfig.kv+json, application/json, application/problem+json\",\n        isConstant: true,\n        serializedName: \"Accept\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const key1 = {\n    parameterPath: \"key\",\n    mapper: {\n        serializedName: \"key\",\n        required: true,\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const ifMatch = {\n    parameterPath: [\"options\", \"ifMatch\"],\n    mapper: {\n        serializedName: \"If-Match\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const ifNoneMatch = {\n    parameterPath: [\"options\", \"ifNoneMatch\"],\n    mapper: {\n        serializedName: \"If-None-Match\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const contentType = {\n    parameterPath: [\"options\", \"contentType\"],\n    mapper: {\n        defaultValue: \"application/vnd.microsoft.appconfig.kv+json\",\n        isConstant: true,\n        serializedName: \"Content-Type\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const entity = {\n    parameterPath: [\"options\", \"entity\"],\n    mapper: KeyValueMapper\n};\nexport const accept3 = {\n    parameterPath: \"accept\",\n    mapper: {\n        defaultValue: \"application/vnd.microsoft.appconfig.labelset+json, application/json, application/problem+json\",\n        isConstant: true,\n        serializedName: \"Accept\",\n        type: {\n            name: \"String\"\n        }\n    }\n};\nexport const select1 = {\n    parameterPath: [\"options\", \"select\"],\n    mapper: {\n        serializedName: \"$Select\",\n        type: {\n            name: \"Sequence\",\n            element: {\n                type: {\n                    name: \"String\"\n                }\n            }\n        }\n    },\n    collectionFormat: \"CSV\"\n};\nexport const nextLink = {\n    parameterPath: \"nextLink\",\n    mapper: {\n        serializedName: \"nextLink\",\n        required: true,\n        type: {\n            name: \"String\"\n        }\n    },\n    skipEncoding: true\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}