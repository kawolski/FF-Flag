{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { getHeaderName, setPlatformSpecificData } from \"./userAgentPlatform\";\nimport { SDK_VERSION } from \"../constants\";\n\nfunction getUserAgentString(telemetryInfo) {\n  const parts = [];\n\n  for (const [key, value] of telemetryInfo) {\n    const token = value ? `${key}/${value}` : key;\n    parts.push(token);\n  }\n\n  return parts.join(\" \");\n}\n/**\n * @internal\n */\n\n\nexport function getUserAgentHeaderName() {\n  return getHeaderName();\n}\n/**\n * @internal\n */\n\nexport function getUserAgentValue(prefix) {\n  const runtimeInfo = new Map();\n  runtimeInfo.set(\"core-rest-pipeline\", SDK_VERSION);\n  setPlatformSpecificData(runtimeInfo);\n  const defaultAgent = getUserAgentString(runtimeInfo);\n  const userAgentValue = prefix ? `${prefix} ${defaultAgent}` : defaultAgent;\n  return userAgentValue;\n}","map":{"version":3,"names":["getHeaderName","setPlatformSpecificData","SDK_VERSION","getUserAgentString","telemetryInfo","parts","key","value","token","push","join","getUserAgentHeaderName","getUserAgentValue","prefix","runtimeInfo","Map","set","defaultAgent","userAgentValue"],"sources":["C:/Users/prash/source/repos/FF-Flag/FF-Flag/ClientApp/node_modules/@azure/core-rest-pipeline/dist-esm/src/util/userAgent.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { getHeaderName, setPlatformSpecificData } from \"./userAgentPlatform\";\nimport { SDK_VERSION } from \"../constants\";\nfunction getUserAgentString(telemetryInfo) {\n    const parts = [];\n    for (const [key, value] of telemetryInfo) {\n        const token = value ? `${key}/${value}` : key;\n        parts.push(token);\n    }\n    return parts.join(\" \");\n}\n/**\n * @internal\n */\nexport function getUserAgentHeaderName() {\n    return getHeaderName();\n}\n/**\n * @internal\n */\nexport function getUserAgentValue(prefix) {\n    const runtimeInfo = new Map();\n    runtimeInfo.set(\"core-rest-pipeline\", SDK_VERSION);\n    setPlatformSpecificData(runtimeInfo);\n    const defaultAgent = getUserAgentString(runtimeInfo);\n    const userAgentValue = prefix ? `${prefix} ${defaultAgent}` : defaultAgent;\n    return userAgentValue;\n}\n"],"mappings":"AAAA;AACA;AACA,SAASA,aAAT,EAAwBC,uBAAxB,QAAuD,qBAAvD;AACA,SAASC,WAAT,QAA4B,cAA5B;;AACA,SAASC,kBAAT,CAA4BC,aAA5B,EAA2C;EACvC,MAAMC,KAAK,GAAG,EAAd;;EACA,KAAK,MAAM,CAACC,GAAD,EAAMC,KAAN,CAAX,IAA2BH,aAA3B,EAA0C;IACtC,MAAMI,KAAK,GAAGD,KAAK,GAAI,GAAED,GAAI,IAAGC,KAAM,EAAnB,GAAuBD,GAA1C;IACAD,KAAK,CAACI,IAAN,CAAWD,KAAX;EACH;;EACD,OAAOH,KAAK,CAACK,IAAN,CAAW,GAAX,CAAP;AACH;AACD;AACA;AACA;;;AACA,OAAO,SAASC,sBAAT,GAAkC;EACrC,OAAOX,aAAa,EAApB;AACH;AACD;AACA;AACA;;AACA,OAAO,SAASY,iBAAT,CAA2BC,MAA3B,EAAmC;EACtC,MAAMC,WAAW,GAAG,IAAIC,GAAJ,EAApB;EACAD,WAAW,CAACE,GAAZ,CAAgB,oBAAhB,EAAsCd,WAAtC;EACAD,uBAAuB,CAACa,WAAD,CAAvB;EACA,MAAMG,YAAY,GAAGd,kBAAkB,CAACW,WAAD,CAAvC;EACA,MAAMI,cAAc,GAAGL,MAAM,GAAI,GAAEA,MAAO,IAAGI,YAAa,EAA7B,GAAiCA,YAA9D;EACA,OAAOC,cAAP;AACH"},"metadata":{},"sourceType":"module"}