{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * The helper that transforms bytes with specific character encoding into string\n * @param bytes - the uint8array bytes\n * @param format - the format we use to encode the byte\n * @returns a string of the encoded string\n */\nexport function uint8ArrayToString(bytes, format) {\n  switch (format) {\n    case \"utf-8\":\n      return uint8ArrayToUtf8String(bytes);\n\n    case \"base64\":\n      return uint8ArrayToBase64(bytes);\n\n    case \"base64url\":\n      return uint8ArrayToBase64Url(bytes);\n  }\n}\n/**\n * The helper that transforms string to specific character encoded bytes array.\n * @param value - the string to be converted\n * @param format - the format we use to decode the value\n * @returns a uint8array\n */\n\nexport function stringToUint8Array(value, format) {\n  switch (format) {\n    case \"utf-8\":\n      return utf8StringToUint8Array(value);\n\n    case \"base64\":\n      return base64ToUint8Array(value);\n\n    case \"base64url\":\n      return base64UrlToUint8Array(value);\n  }\n}\n/**\n * Decodes a Uint8Array into a Base64 string.\n * @internal\n */\n\nexport function uint8ArrayToBase64(uint8Array) {\n  const decoder = new TextDecoder();\n  const dataString = decoder.decode(uint8Array);\n  return btoa(dataString);\n}\n/**\n * Decodes a Uint8Array into a Base64Url string.\n * @internal\n */\n\nexport function uint8ArrayToBase64Url(bytes) {\n  return uint8ArrayToBase64(bytes).replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n}\n/**\n * Decodes a Uint8Array into a javascript string.\n * @internal\n */\n\nexport function uint8ArrayToUtf8String(uint8Array) {\n  const decoder = new TextDecoder(\"utf-8\");\n  const dataString = decoder.decode(uint8Array);\n  return dataString;\n}\n/**\n * Encodes a JavaScript string into a Uint8Array.\n * @internal\n */\n\nexport function utf8StringToUint8Array(value) {\n  return new TextEncoder(\"utf-8\").encode(value);\n}\n/**\n * Encodes a Base64 string into a Uint8Array.\n * @internal\n */\n\nexport function base64ToUint8Array(value) {\n  return new TextEncoder().encode(atob(value));\n}\n/**\n * Encodes a Base64Url string into a Uint8Array.\n * @internal\n */\n\nexport function base64UrlToUint8Array(value) {\n  const base64String = value.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  return base64ToUint8Array(base64String);\n}","map":{"version":3,"names":["uint8ArrayToString","bytes","format","uint8ArrayToUtf8String","uint8ArrayToBase64","uint8ArrayToBase64Url","stringToUint8Array","value","utf8StringToUint8Array","base64ToUint8Array","base64UrlToUint8Array","uint8Array","decoder","TextDecoder","dataString","decode","btoa","replace","TextEncoder","encode","atob","base64String"],"sources":["C:/Users/prash/source/repos/FF-Flag/FF-Flag/ClientApp/node_modules/@azure/core-util/dist-esm/src/bytesEncoding.browser.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * The helper that transforms bytes with specific character encoding into string\n * @param bytes - the uint8array bytes\n * @param format - the format we use to encode the byte\n * @returns a string of the encoded string\n */\nexport function uint8ArrayToString(bytes, format) {\n    switch (format) {\n        case \"utf-8\":\n            return uint8ArrayToUtf8String(bytes);\n        case \"base64\":\n            return uint8ArrayToBase64(bytes);\n        case \"base64url\":\n            return uint8ArrayToBase64Url(bytes);\n    }\n}\n/**\n * The helper that transforms string to specific character encoded bytes array.\n * @param value - the string to be converted\n * @param format - the format we use to decode the value\n * @returns a uint8array\n */\nexport function stringToUint8Array(value, format) {\n    switch (format) {\n        case \"utf-8\":\n            return utf8StringToUint8Array(value);\n        case \"base64\":\n            return base64ToUint8Array(value);\n        case \"base64url\":\n            return base64UrlToUint8Array(value);\n    }\n}\n/**\n * Decodes a Uint8Array into a Base64 string.\n * @internal\n */\nexport function uint8ArrayToBase64(uint8Array) {\n    const decoder = new TextDecoder();\n    const dataString = decoder.decode(uint8Array);\n    return btoa(dataString);\n}\n/**\n * Decodes a Uint8Array into a Base64Url string.\n * @internal\n */\nexport function uint8ArrayToBase64Url(bytes) {\n    return uint8ArrayToBase64(bytes).replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=/g, \"\");\n}\n/**\n * Decodes a Uint8Array into a javascript string.\n * @internal\n */\nexport function uint8ArrayToUtf8String(uint8Array) {\n    const decoder = new TextDecoder(\"utf-8\");\n    const dataString = decoder.decode(uint8Array);\n    return dataString;\n}\n/**\n * Encodes a JavaScript string into a Uint8Array.\n * @internal\n */\nexport function utf8StringToUint8Array(value) {\n    return new TextEncoder(\"utf-8\").encode(value);\n}\n/**\n * Encodes a Base64 string into a Uint8Array.\n * @internal\n */\nexport function base64ToUint8Array(value) {\n    return new TextEncoder().encode(atob(value));\n}\n/**\n * Encodes a Base64Url string into a Uint8Array.\n * @internal\n */\nexport function base64UrlToUint8Array(value) {\n    const base64String = value.replace(/-/g, \"+\").replace(/_/g, \"/\");\n    return base64ToUint8Array(base64String);\n}\n"],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,kBAAT,CAA4BC,KAA5B,EAAmCC,MAAnC,EAA2C;EAC9C,QAAQA,MAAR;IACI,KAAK,OAAL;MACI,OAAOC,sBAAsB,CAACF,KAAD,CAA7B;;IACJ,KAAK,QAAL;MACI,OAAOG,kBAAkB,CAACH,KAAD,CAAzB;;IACJ,KAAK,WAAL;MACI,OAAOI,qBAAqB,CAACJ,KAAD,CAA5B;EANR;AAQH;AACD;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASK,kBAAT,CAA4BC,KAA5B,EAAmCL,MAAnC,EAA2C;EAC9C,QAAQA,MAAR;IACI,KAAK,OAAL;MACI,OAAOM,sBAAsB,CAACD,KAAD,CAA7B;;IACJ,KAAK,QAAL;MACI,OAAOE,kBAAkB,CAACF,KAAD,CAAzB;;IACJ,KAAK,WAAL;MACI,OAAOG,qBAAqB,CAACH,KAAD,CAA5B;EANR;AAQH;AACD;AACA;AACA;AACA;;AACA,OAAO,SAASH,kBAAT,CAA4BO,UAA5B,EAAwC;EAC3C,MAAMC,OAAO,GAAG,IAAIC,WAAJ,EAAhB;EACA,MAAMC,UAAU,GAAGF,OAAO,CAACG,MAAR,CAAeJ,UAAf,CAAnB;EACA,OAAOK,IAAI,CAACF,UAAD,CAAX;AACH;AACD;AACA;AACA;AACA;;AACA,OAAO,SAAST,qBAAT,CAA+BJ,KAA/B,EAAsC;EACzC,OAAOG,kBAAkB,CAACH,KAAD,CAAlB,CAA0BgB,OAA1B,CAAkC,KAAlC,EAAyC,GAAzC,EAA8CA,OAA9C,CAAsD,KAAtD,EAA6D,GAA7D,EAAkEA,OAAlE,CAA0E,IAA1E,EAAgF,EAAhF,CAAP;AACH;AACD;AACA;AACA;AACA;;AACA,OAAO,SAASd,sBAAT,CAAgCQ,UAAhC,EAA4C;EAC/C,MAAMC,OAAO,GAAG,IAAIC,WAAJ,CAAgB,OAAhB,CAAhB;EACA,MAAMC,UAAU,GAAGF,OAAO,CAACG,MAAR,CAAeJ,UAAf,CAAnB;EACA,OAAOG,UAAP;AACH;AACD;AACA;AACA;AACA;;AACA,OAAO,SAASN,sBAAT,CAAgCD,KAAhC,EAAuC;EAC1C,OAAO,IAAIW,WAAJ,CAAgB,OAAhB,EAAyBC,MAAzB,CAAgCZ,KAAhC,CAAP;AACH;AACD;AACA;AACA;AACA;;AACA,OAAO,SAASE,kBAAT,CAA4BF,KAA5B,EAAmC;EACtC,OAAO,IAAIW,WAAJ,GAAkBC,MAAlB,CAAyBC,IAAI,CAACb,KAAD,CAA7B,CAAP;AACH;AACD;AACA;AACA;AACA;;AACA,OAAO,SAASG,qBAAT,CAA+BH,KAA/B,EAAsC;EACzC,MAAMc,YAAY,GAAGd,KAAK,CAACU,OAAN,CAAc,IAAd,EAAoB,GAApB,EAAyBA,OAAzB,CAAiC,IAAjC,EAAuC,GAAvC,CAArB;EACA,OAAOR,kBAAkB,CAACY,YAAD,CAAzB;AACH"},"metadata":{},"sourceType":"module"}